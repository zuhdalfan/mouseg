/* auto-generated by gen_syscalls.py, don't edit */

#ifndef Z_INCLUDE_SYSCALLS_RENESAS_ELC_H
#define Z_INCLUDE_SYSCALLS_RENESAS_ELC_H


#include <zephyr/tracing/tracing_syscall.h>

#ifndef _ASMLANGUAGE

#include <stdarg.h>

#include <zephyr/syscall_list.h>
#include <zephyr/syscall.h>

#include <zephyr/linker/sections.h>


#ifdef __cplusplus
extern "C" {
#endif

extern int z_impl_renesas_elc_software_event_generate(const struct device * dev, uint32_t event);

__pinned_func
static inline int renesas_elc_software_event_generate(const struct device * dev, uint32_t event)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		union { uintptr_t x; uint32_t val; } parm1 = { .val = event };
		return (int) arch_syscall_invoke2(parm0.x, parm1.x, K_SYSCALL_RENESAS_ELC_SOFTWARE_EVENT_GENERATE);
	}
#endif
	compiler_barrier();
	return z_impl_renesas_elc_software_event_generate(dev, event);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define renesas_elc_software_event_generate(dev, event) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_RENESAS_ELC_SOFTWARE_EVENT_GENERATE, renesas_elc_software_event_generate, dev, event); 	syscall__retval = renesas_elc_software_event_generate(dev, event); 	sys_port_trace_syscall_exit(K_SYSCALL_RENESAS_ELC_SOFTWARE_EVENT_GENERATE, renesas_elc_software_event_generate, dev, event, syscall__retval); 	syscall__retval; })
#endif
#endif


extern int z_impl_renesas_elc_link_set(const struct device * dev, uint32_t peripheral, uint32_t event);

__pinned_func
static inline int renesas_elc_link_set(const struct device * dev, uint32_t peripheral, uint32_t event)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		union { uintptr_t x; uint32_t val; } parm1 = { .val = peripheral };
		union { uintptr_t x; uint32_t val; } parm2 = { .val = event };
		return (int) arch_syscall_invoke3(parm0.x, parm1.x, parm2.x, K_SYSCALL_RENESAS_ELC_LINK_SET);
	}
#endif
	compiler_barrier();
	return z_impl_renesas_elc_link_set(dev, peripheral, event);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define renesas_elc_link_set(dev, peripheral, event) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_RENESAS_ELC_LINK_SET, renesas_elc_link_set, dev, peripheral, event); 	syscall__retval = renesas_elc_link_set(dev, peripheral, event); 	sys_port_trace_syscall_exit(K_SYSCALL_RENESAS_ELC_LINK_SET, renesas_elc_link_set, dev, peripheral, event, syscall__retval); 	syscall__retval; })
#endif
#endif


extern int z_impl_renesas_elc_link_break(const struct device * dev, uint32_t peripheral);

__pinned_func
static inline int renesas_elc_link_break(const struct device * dev, uint32_t peripheral)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		union { uintptr_t x; uint32_t val; } parm1 = { .val = peripheral };
		return (int) arch_syscall_invoke2(parm0.x, parm1.x, K_SYSCALL_RENESAS_ELC_LINK_BREAK);
	}
#endif
	compiler_barrier();
	return z_impl_renesas_elc_link_break(dev, peripheral);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define renesas_elc_link_break(dev, peripheral) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_RENESAS_ELC_LINK_BREAK, renesas_elc_link_break, dev, peripheral); 	syscall__retval = renesas_elc_link_break(dev, peripheral); 	sys_port_trace_syscall_exit(K_SYSCALL_RENESAS_ELC_LINK_BREAK, renesas_elc_link_break, dev, peripheral, syscall__retval); 	syscall__retval; })
#endif
#endif


extern int z_impl_renesas_elc_enable(const struct device * dev);

__pinned_func
static inline int renesas_elc_enable(const struct device * dev)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		return (int) arch_syscall_invoke1(parm0.x, K_SYSCALL_RENESAS_ELC_ENABLE);
	}
#endif
	compiler_barrier();
	return z_impl_renesas_elc_enable(dev);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define renesas_elc_enable(dev) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_RENESAS_ELC_ENABLE, renesas_elc_enable, dev); 	syscall__retval = renesas_elc_enable(dev); 	sys_port_trace_syscall_exit(K_SYSCALL_RENESAS_ELC_ENABLE, renesas_elc_enable, dev, syscall__retval); 	syscall__retval; })
#endif
#endif


extern int z_impl_renesas_elc_disable(const struct device * dev);

__pinned_func
static inline int renesas_elc_disable(const struct device * dev)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		return (int) arch_syscall_invoke1(parm0.x, K_SYSCALL_RENESAS_ELC_DISABLE);
	}
#endif
	compiler_barrier();
	return z_impl_renesas_elc_disable(dev);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define renesas_elc_disable(dev) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_RENESAS_ELC_DISABLE, renesas_elc_disable, dev); 	syscall__retval = renesas_elc_disable(dev); 	sys_port_trace_syscall_exit(K_SYSCALL_RENESAS_ELC_DISABLE, renesas_elc_disable, dev, syscall__retval); 	syscall__retval; })
#endif
#endif


#ifdef __cplusplus
}
#endif

#endif
#endif /* include guard */
